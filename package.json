{
  "name": "protocolfile-enhanced",
  "displayName": "ProtocolFile Enhanced Testing Suite",
  "description": "Advanced VSCode extension for laboratory testing teams with integrated test runner, database operations, and sophisticated configuration management",
  "version": "2.0.0",
  "publisher": "CLU",
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Testing",
    "Other",
    "Snippets",
    "Linters"
  ],
  "keywords": [
    "laboratory",
    "testing",
    "protocol",
    "medical",
    "automation",
    "validation",
    "json schema",
    "database"
  ],
  "main": "./out/extension.js",
  "activationEvents": [
    "onLanguage:json",
    "workspaceContains:**/ProtocolFile*.json",
    "workspaceContains:**/TestDataProtocolFile*.json",
    "workspaceContains:**/*.protocol.json",
    "workspaceContains:protocolfile-config.json"
  ],
  "contributes": {
    "commands": [
      {
        "command": "protocolfile.generateTemplate",
        "title": "Generate Template",
        "category": "ProtocolFile",
        "icon": "$(file-add)"
      },
      {
        "command": "protocolfile.validateProtocolFile",
        "title": "Validate Current File",
        "category": "ProtocolFile",
        "icon": "$(check)"
      },
      {
        "command": "protocolfile.runIntegratedTest",
        "title": "Run Enhanced Integrated Test",
        "category": "ProtocolFile",
        "icon": "$(play)"
      },
      {
        "command": "protocolfile.openConfigurationEditor",
        "title": "Open Configuration Editor",
        "category": "ProtocolFile",
        "icon": "$(settings-gear)"
      },
      {
        "command": "protocolfile.createConfigurationProfile",
        "title": "Create Configuration Profile",
        "category": "ProtocolFile",
        "icon": "$(file-add)"
      },
      {
        "command": "protocolfile.configureTestPaths",
        "title": "Configure Test Paths (Legacy)",
        "category": "ProtocolFile",
        "icon": "$(folder-opened)"
      },
      {
        "command": "protocolfile.stopRunningTest",
        "title": "Stop Running Test",
        "category": "ProtocolFile",
        "icon": "$(stop)"
      },
      {
        "command": "protocolfile.showQuickActions",
        "title": "Show Quick Actions",
        "category": "ProtocolFile",
        "icon": "$(list-selection)"
      },
      {
        "command": "protocolfile.validateAllFiles",
        "title": "Validate All ProtocolFiles",
        "category": "ProtocolFile",
        "icon": "$(checklist)"
      },
      {
        "command": "protocolfile.compareProtocolFiles",
        "title": "Compare ProtocolFiles",
        "category": "ProtocolFile",
        "icon": "$(diff)"
      },
      {
        "command": "protocolfile.generateTestData",
        "title": "Generate Test Data",
        "category": "ProtocolFile",
        "icon": "$(database)"
      },
      {
        "command": "protocolfile.showTestLogs",
        "title": "Show Test Execution Logs",
        "category": "ProtocolFile",
        "icon": "$(output)"
      },
      {
        "command": "protocolfile.exportConfiguration",
        "title": "Export Configuration",
        "category": "ProtocolFile",
        "icon": "$(export)"
      },
      {
        "command": "protocolfile.importConfiguration",
        "title": "Import Configuration",
        "category": "ProtocolFile",
        "icon": "$(import)"
      }
    ],
    "keybindings": [
      {
        "command": "protocolfile.generateTemplate",
        "key": "ctrl+shift+n",
        "when": "resourceExtname == .json"
      },
      {
        "command": "protocolfile.validateProtocolFile",
        "key": "ctrl+shift+v",
        "when": "resourceExtname == .json"
      },
      {
        "command": "protocolfile.runIntegratedTest",
        "key": "ctrl+shift+t",
        "when": "resourceExtname == .json"
      },
      {
        "command": "protocolfile.openConfigurationEditor",
        "key": "ctrl+shift+c",
        "when": "workspaceFolderCount > 0"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "protocolfile.generateTemplate",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "protocolfile.validateProtocolFile",
          "when": "resourceExtname == .json"
        },
        {
          "command": "protocolfile.runIntegratedTest",
          "when": "resourceExtname == .json"
        },
        {
          "command": "protocolfile.openConfigurationEditor",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "protocolfile.createConfigurationProfile",
          "when": "workspaceFolderCount > 0"
        }
      ],
      "editor/context": [
        {
          "submenu": "protocolfile.submenu",
          "when": "resourceExtname == .json && (resourceFilename =~ /.*ProtocolFile.*/ || resourceFilename =~ /.*TestDataProtocolFile.*/)",
          "group": "1_protocolfile"
        }
      ],
      "protocolfile.submenu": [
        {
          "command": "protocolfile.validateProtocolFile",
          "group": "1_validate"
        },
        {
          "command": "protocolfile.runIntegratedTest",
          "group": "2_test"
        },
        {
          "command": "protocolfile.compareProtocolFiles",
          "group": "3_compare"
        },
        {
          "command": "protocolfile.generateTestData",
          "group": "4_generate"
        }
      ],
      "explorer/context": [
        {
          "command": "protocolfile.validateProtocolFile",
          "when": "resourceExtname == .json && (resourceFilename =~ /.*ProtocolFile.*/ || resourceFilename =~ /.*TestDataProtocolFile.*/)",
          "group": "1_protocolfile"
        },
        {
          "command": "protocolfile.runIntegratedTest",
          "when": "resourceExtname == .json && (resourceFilename =~ /.*ProtocolFile.*/ || resourceFilename =~ /.*TestDataProtocolFile.*/)",
          "group": "1_protocolfile"
        }
      ]
    },
    "submenus": [
      {
        "id": "protocolfile.submenu",
        "label": "ProtocolFile Actions"
      }
    ],
    "configuration": {
      "title": "ProtocolFile Enhanced",
      "properties": {
        "protocolfile.configurationFile": {
          "type": "string",
          "default": "protocolfile-config.json",
          "description": "Path to the configuration file (relative to workspace root)",
          "scope": "workspace"
        },
        "protocolfile.autoLoadConfiguration": {
          "type": "boolean",
          "default": true,
          "description": "Automatically load configuration on extension activation",
          "scope": "workspace"
        },
        "protocolfile.validateOnSave": {
          "type": "boolean",
          "default": true,
          "description": "Validate protocol files when saved",
          "scope": "workspace"
        },
        "protocolfile.enableLiveValidation": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time validation while typing",
          "scope": "workspace"
        },
        "protocolfile.showStatusBarItem": {
          "type": "boolean",
          "default": true,
          "description": "Show ProtocolFile status bar item",
          "scope": "workspace"
        },
        "protocolfile.logLevel": {
          "type": "string",
          "enum": ["error", "warn", "info", "debug"],
          "default": "info",
          "description": "Logging level for extension output",
          "scope": "workspace"
        },
        "protocolfile.autoBackupConfigurations": {
          "type": "boolean",
          "default": true,
          "description": "Automatically backup configuration files before modification",
          "scope": "workspace"
        },
        "protocolfile.testExecutionTimeout": {
          "type": "number",
          "default": 300,
          "minimum": 30,
          "maximum": 3600,
          "description": "Maximum test execution time in seconds",
          "scope": "workspace"
        },
        "protocolfile.enableNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Show notifications for test completion and errors",
          "scope": "workspace"
        }
      }
    },
    "jsonValidation": [
      {
        "fileMatch": "**/protocolfile-config.json",
        "url": "./schemas/protocolfile-config.schema.json"
      },
      {
        "fileMatch": "**/*ProtocolFile*.json",
        "url": "./schemas/ProtocolFile.schema.json"
      },
      {
        "fileMatch": "**/*TestDataProtocolFile*.json",
        "url": "./schemas/testDataProtocolFile.schema.json"
      },
      {
        "fileMatch": "**/*.protocol.json",
        "url": "./schemas/ProtocolFile.schema.json"
      }
    ],
    "snippets": [
      {
        "language": "json",
        "path": "./snippets/protocolfile.json"
      },
      {
        "language": "json",
        "path": "./snippets/testdata.json"
      },
      {
        "language": "json",
        "path": "./snippets/configuration.json"
      }
    ],
    "languages": [
      {
        "id": "protocolfile-config",
        "aliases": ["ProtocolFile Configuration"],
        "filenames": ["protocolfile-config.json"],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "protocolfile-config",
        "scopeName": "source.json.protocolfile-config",
        "path": "./syntaxes/protocolfile-config.tmGrammar.json"
      }
    ],
    "taskDefinitions": [
      {
        "type": "protocolfile",
        "required": ["action"],
        "properties": {
          "action": {
            "type": "string",
            "enum": ["validate", "test", "validate-all"],
            "description": "The action to perform"
          },
          "file": {
            "type": "string",
            "description": "Specific file to process (optional)"
          },
          "profile": {
            "type": "string",
            "description": "Configuration profile to use (optional)"
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "protocolfile",
        "label": "ProtocolFile Validation",
        "owner": "protocolfile",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(ERROR|WARNING):\\s+(.+)\\s+at\\s+(.+):(\\d+):(\\d+)$",
          "severity": 1,
          "message": 2,
          "file": 3,
          "line": 4,
          "column": 5
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "deploy": "vsce publish"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "@vscode/test-electron": "^2.2.0",
    "@vscode/vsce": "^2.15.0"
  },
  "dependencies": {
    "ajv": "^8.12.0"
  },
  "extensionDependencies": [],
  "badges": [
    {
      "url": "https://img.shields.io/badge/Laboratory-Testing-blue",
      "href": "https://github.com/your-org/protocolfile-extension",
      "description": "Laboratory Testing Extension"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/protocolfile-extension"
  },
  "bugs": {
    "url": "https://github.com/your-org/protocolfile-extension/issues"
  },
  "homepage": "https://github.com/your-org/protocolfile-extension#readme",
  "license": "MIT",
  "icon": "",
  "galleryBanner": {
    "color": "#0066cc",
    "theme": "dark"
  },
  "preview": false,
  "qna": "marketplace",
  "extensionKind": [
    "workspace"
  ]
}